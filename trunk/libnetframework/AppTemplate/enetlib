#!/bin/bash
SRC="/usr/local/include/libnetframework/AppTemplate"
SRC="./"
DAY=`date +"%Y-%m-%d"`
USER=`users|awk '{print $1}'`

function usage()
{
	echo
	echo "Usage: enetlib -[s|m] ServerClass [-p ProtocolFamily] [-main]"
	echo -e "\t-s : Generate a SINGLE thread server class"
	echo -e "\t-m : Generate a MULTIPLE thread server class"
	echo -e "\t-p : Use ProtocolFamily"
	echo -e "\t-main : Generate a Main-cpp file for the ServerClass"
	echo 
	echo "Usage: enetlib -p ProtocolFamily"
	echo -e "\t-p : Generate ProtocolFamily class"
	echo
}

function genetate_framework_Class()
{
	TClassName=$1   ###模板类名
	ClassName=$2    ###目标类名
	PF=$3           ###协议族
	
	MACRO=`echo $ClassName|awk '{print toupper($1)}'`   ###宏名称

	if [ -f "${ClassName}.h" ] || [ -f "${ClassName}.cpp" ];then
		echo "${ClassName}.h or ${ClassName}.cpp already exist. Do Nothing."
		return
	fi

	echo "Generate Framework Class: ${ClassName}.h, ${ClassName}.cpp..."
	### h file
	sed -e "s/\#CreateDate\#/$DAY/" -e "s/\#Author\#/$USER/" -e "s/_${TClassName}_H_/_${MACRO}_H_/" -e "s/${TClassName}/${ClassName}/g" ${SRC}/${TClassName}.h >${ClassName}.h
	### cpp file
	sed -e "s/\#CreateDate\#/$DAY/" -e "s/\#Author\#/$USER/" -e "s/${TClassName}/${ClassName}/g" ${SRC}/${TClassName}.cpp >${ClassName}.cpp

	if [ "$PF" != "" ];then
		sed -i "s/TemplateProtocolFamily/$PF/" ${ClassName}.cpp
	fi
}

function generate_protocl_family()
{
	PF=$1  ###协议族名称
	MACRO=`echo $PF|awk '{print toupper($1)}'`   ###宏名称

	if [ -f "$PF.h" ] || [ -f "$PF.cpp" ];then
		echo "$PF.h or $PF.cpp already exist. Do Nothing."
		return
	fi

	echo "Generate ProtocolFamily class: $PF.h, $PF.cpp..."
	### h file
	sed -e "s/\#CreateDate\#/$DAY/" -e "s/\#Author\#/$USER/" -e "s/_TemplateProtocolFamily_H_/_${MACRO}_H_/" -e "s/TemplateProtocolFamily/$PF/" ${SRC}/TemplateProtocolFamily.h >${PF}.h
	### cpp file
	sed -e "s/\#CreateDate\#/$DAY/" -e "s/\#Author\#/$USER/" -e "s/TemplateProtocolFamily/$PF/" ${SRC}/TemplateProtocolFamily.cpp >${PF}.cpp
}

##########################
if [ $# -lt 1 ];then
	usage;
	exit
fi

if [ "$1" != "-s" ] && [ "$1" != "-m" ] && [ "$1" != "-p" ];then
	echo "error: unknow option: $1"
	usage;
	exit
fi
MODE=$1

if [ $# -lt 2 ];then
	echo "error: ServerClass needed"
	usage;
	exit
fi

if [ "$MODE" = "-s" ];then
	PF=""  ###协议族
	if [ "$3" = "-p" ] && [ "$4" != "" ] && [ "${4:0:1}" != "-" ] ;then
		generate_protocl_family $4
		PF=$4
	fi
	genetate_framework_Class STAppTemplate $2 $PF
elif [ "$MODE" = "-m" ];then
	if [ "$3" = "-p" ] && [ "$4" != "" ] && [ "${4:0:1}" != "-" ];then
		generate_protocl_family $4
		PF=$4
	fi
	genetate_framework_Class MTAppTemplate $2 $PF
elif [ "$MODE" = "-p" ];then
	generate_protocl_family $2
fi

if [ $# -gt 2 ] && [ ${!#} = "-main" ];then
	MAINCPP="${2}Main.cpp"

	if [ -f "${MAINCPP}" ];then
		echo "${MAINCPP} already exist. Do Nothing."
	else
		echo "Generate Main cpp file: ${MAINCPP}"
		sed -e "s/\#CreateDate\#/$DAY/" -e "s/\#Author\#/$USER/" -e "s/AppTemplate/$2/" ${SRC}/AppTemplateMain.cpp >${MAINCPP}
	fi
fi

echo "finished..."
echo
