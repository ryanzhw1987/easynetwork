#summary One-sentence summary of this page.

= Introduction =

本节介绍一个使用EasyNetwork框架搭建到下载服务器.该服务器支持多任务/多线程/下载,支持断点续传.

该Donwload server/client比较简单,没有过多的优化工作,以及保证服务的稳定性以及.因为我们的focus是“怎么使用框架搭建Download server",而不是“Download server". 当然,现在我们的精力是在应用层,而不是框架.呵呵...好吧,进入主题


= 一. 下载协议 =
下载协议,是最基本到要求了,我就不说啥了. 我们利用框架的DefaultProtocol来定义我们下载的4个协议:RequestSize, RespondSize, RequestData, RespondData.

 * *RequestSize 请求文件大小*
{{{
class RequestSize: public DefaultProtocol
{
public://实现protocol的接口
	//编码协议体数据到io_buffer.成功返回编码后协议体长度(大于0),失败返回-1;
	int encode_body(IOBuffer *io_buffer);
	//解码包体.成功返回0,否则返回-1;
	int decode_body(const char* buf, int buf_size);
public:
	RequestSize():DefaultProtocol(PROTOCOL_REQUEST_SIZE){}
	RequestSize(string &filename):DefaultProtocol(PROTOCOL_REQUEST_SIZE)
	{
		m_file_name = filename;
	}
	void assign(const string &file_name){m_file_name = file_name;}
	const string& get_file_name(){return m_file_name;}
private:
	string m_file_name;
};
}}}


= 二. Download Serer =
 

= 三. Download Client =